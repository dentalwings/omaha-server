files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/run_supervised_celeryd.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      celeryenv=`cat /opt/python/current/env | tr '\n' ',' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g' | sed 's/%/%%/g'`
      celeryenv=${celeryenv%?}


      # Create celery configuration script
      celeryconf="[program:celeryd-worker]
      command=/opt/python/run/venv/bin/celery worker -B -A omaha_server --loglevel=INFO
      directory=/opt/python/current/app
      environment=$celeryenv
      numprocs=1
      autostart=true
      autorestart=true
      startsecs=10
      stopwaitsecs = 600
      killasgroup=true
      stdout_logfile=/var/log/celery-worker.log
      stderr_logfile=/var/log/celery-worker.log"

      # Create the celery supervisord conf script
      echo "$celeryconf" | tee /opt/python/etc/celery.conf

      # Add configuration script to supervisord conf (if not there already)
      if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
        then
        echo "[include]" | tee -a /opt/python/etc/supervisord.conf
        echo "files: celery.conf" | tee -a /opt/python/etc/supervisord.conf
      fi

      # Reread the supervisord config
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf update

      # Start/Restart celeryd through supervisord
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf restart celeryd-worker


option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: omaha_server/wsgi.py
container_commands:
  00_celery_tasks_run:
    command: "/opt/elasticbeanstalk/hooks/appdeploy/post/run_supervised_celeryd.sh"
    leader_only: true
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && python manage.py migrate"
    leader_only: true
  02_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && python manage.py collectstatic --noinput"
    leader_only: true
  03_create_admin:
    command: "source /opt/python/run/venv/bin/activate && python createadmin.py"
    leader_only: true
  04_wsgipass:
    command: 'echo "WSGIPassAuthorization On" >> ../wsgi.conf'
